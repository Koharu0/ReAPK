<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="apksignerNotFound" xml:space="preserve">
    <value>오류: apksigner.jar이 존재하지 않습니다.\n설정에서 경로를 변경해주세요.</value>
  </data>
  <data name="ApktoolNotFound" xml:space="preserve">
    <value>오류: apktool.jar이 존재하지 않습니다.\n설정에서 경로를 변경해주세요.</value>
  </data>
  <data name="btnCompile" xml:space="preserve">
    <value>APK 컴파일</value>
  </data>
  <data name="btnDecompile" xml:space="preserve">
    <value>APK 디컴파일</value>
  </data>
  <data name="btnOpenCompiledFolder" xml:space="preserve">
    <value>컴파일된 APK 디렉터리 열기</value>
  </data>
  <data name="btnOpenDecompiledFolder" xml:space="preserve">
    <value>디컴파일된 APK 디렉터리 열기</value>
  </data>
  <data name="btnOpenSignedFolder" xml:space="preserve">
    <value>서명된 APK 디렉터리 열기</value>
  </data>
  <data name="btnSign" xml:space="preserve">
    <value>APK 서명</value>
  </data>
  <data name="CertNotFound" xml:space="preserve">
    <value>오류: Cert가 존재하지 않습니다.\n설정에서 경로를 변경해주세요.</value>
  </data>
  <data name="chkAutoSign" xml:space="preserve">
    <value>APK 컴파일 후 자동으로 서명</value>
  </data>
  <data name="ErrorButRecovered" xml:space="preserve">
    <value>오류가 발생했으나 복구에 성공했습니다.\n변경 사항을 적용하기 위해 프로그램을 다시 실행해 주세요.</value>
  </data>
  <data name="FollowError" xml:space="preserve">
    <value>오류 메시지는 다음과 같습니다: </value>
  </data>
  <data name="KeyNotFound" xml:space="preserve">
    <value>오류: Key가 존재하지 않습니다.\n설정에서 경로를 변경해주세요.</value>
  </data>
  <data name="labHowToUse" xml:space="preserve">
    <value>파일을 버튼으로 Drag &amp; Drop해서 작업을 수행 가능합니다.</value>
  </data>
  <data name="labWarning" xml:space="preserve">
    <value>설정값을 저장하기 위해 설정값 변경 후 'Set' 버튼을 눌러주세요.</value>
  </data>
  <data name="OnlyCanDropAPK" xml:space="preserve">
    <value>확장명이 .apk인 파일만 끌어 놓을 수 있습니다.</value>
  </data>
  <data name="ResetFailed" xml:space="preserve">
    <value>설정 파일 초기화 중 오류가 발생했습니다.\nWin+R -&gt; %localappdata% 입력 후 ReAPK 폴더를 삭제해 주세요.\nReAPK 폴더가 없는 경우, 프로그램을 재설치해 주세요.</value>
  </data>
  <data name="tabMain" xml:space="preserve">
    <value>메인</value>
  </data>
  <data name="tabSettings" xml:space="preserve">
    <value>설정</value>
  </data>
  <data name="UnknownError" xml:space="preserve">
    <value>알 수 없는 오류가 발생했습니다. 프로그램이 정상적으로 작동하지 않을 수 있습니다.</value>
  </data>
  <data name="UnknownError_RestartNeeded" xml:space="preserve">
    <value>알 수 없는 오류가 발생했습니다. 프로그램을 다시 실행해 주세요.</value>
  </data>
</root>